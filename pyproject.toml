# Hevno/pyproject.toml

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "hevno-engine"
version = "1.2.0"
authors = [
    { name="Hevno Team", email="contact@example.com" },
]
description = "A dynamically loaded, modular execution engine for Hevno, built with a plugin-first architecture."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
# 核心依赖
dependencies = [
    "aiofiles",
    "annotated-types",
    "anyio",
    "asgi-lifespan",
    "cachetools",
    "certifi",
    "charset-normalizer",
    "click",
    "cloudpickle",
    "dnspython",
    "docopt",
    "email_validator",
    "fastapi",
    "fastapi-cli",
    "fastapi-cloud-cli",
    "google-ai-generativelanguage",
    "google-api-core",
    "google-api-python-client",
    "google-auth",
    "google-auth-httplib2",
    "google-generativeai",
    "googleapis-common-protos",
    "grpcio",
    "grpcio-status",
    "h11",
    "httpcore",
    "httplib2",
    "httptools",
    "httpx",
    "idna",
    "iniconfig",
    "itsdangerous",
    "Jinja2",
    "jsonpatch",
    "jsonpointer",
    "markdown-it-py",
    "MarkupSafe",
    "mdurl",
    "orjson",
    "packaging",
    "pillow",
    "pipreqs",
    "pluggy",
    "proto-plus",
    "protobuf",
    "pyasn1",
    "pyasn1_modules",
    "pydantic",
    "pydantic-extra-types",
    "pydantic-settings",
    "pydantic_core",
    "Pygments",
    "pyparsing",
    "pytest",
    "pytest-asyncio",
    "pytest-mock",
    "python-dotenv",
    "python-multipart",
    "PyYAML",
    "requests",
    "rich",
    "rich-toolkit",
    "rignore",
    "rsa",
    "sentry-sdk",
    "shellingham",
    "sniffio",
    "starlette",
    "tenacity",
    "tqdm",
    "typer",
    "typing-inspection",
    "typing_extensions",
    "ujson",
    "uritemplate",
    "urllib3",
    "uvicorn",
    "uvloop",
    "watchfiles",
    "websockets",
    "yarg"
]

[project.optional-dependencies]
dev = [ 
    "uvicorn[standard]",
    "typer[all]"
]

[project.scripts]
hevno = "cli:app"

[project.entry-points."hevno.plugins"]
# 这部分通常用于打包发布后的插件发现，对于本地开发可能不是必需的
# 但保留它没有坏处
core_logging = "plugins.core_logging"

[tool.setuptools]
include-package-data = true
py-modules = ["cli"]

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "plugins*"]


# --- Pytest 配置 ---
[tool.pytest.ini_options]
# 明确指定测试文件的搜索路径
testpaths = [
    "tests",
    # 允许 pytest 在插件目录中发现 tests/ 子目录
    "plugins", 
]

# 配置 pytest-asyncio
asyncio_mode = "auto"

# 定义你的自定义标记
markers = [
    "e2e: marks tests as end-to-end, which may require network access and secrets."
]